.include "macros.asm" #подключаем библиотеку с макросами, изначально были подпрограммы, но я их обернул
.data
.align 2 # для типа инт
array_A: .space 40 #выделяем максимум под 10 элементов
arrend_A:
.align 2
array_B: .space 40 #выделяем максимум под 10 элементов
arrend_B:
.text
check: #проверяем число элемментов, что оно от 1 до 10
	li a7 5
	ecall
	li a1 10
	if_gr: ble a0 a1 if_less
		li a0 10 # если больше 10, кладем 10
		j main
	if_less: bgtz a0 main
		li a0 1 # если меньше 1, кладем 1
main: # вызываем макросы!
	mv a1 a0 #кладем в a1 размер массива
	la a0 array_A # в a0 будет храниться указатель на массив А
	fill(a0 a1) # вызываем (сначала были подпрограммы)макрос заполнения массива А, входные параметры - в а0 указатель на массив А, в а1 размер А
	la a2 array_B # в a2 хранится указатель на массив B
	sort(a0 a1 a2) # вызываем заполнение массива B отсортированными по возрастанию элементами массива А. параметры а0 - указатель на массив А, а1 - размер массива, а2 - указатель на массив B
	print(a2 a1) # печатаем массив B, в параметрах указатель на него и размер. 
	li a7 10 #exit
	ecall
